# 1 < ? 919000; as N

'lib/hof.bang' require! .filter as filter

def :quicksort = {
  # 2 / nth!  as pivotValue -- Stack[stacklen / 2]
  save-stack! as theStack
 
   theStack! fun = pivotValue <; filter! # 1 > ? quicksort!;
  (theStack! fun = pivotValue =; filter!)
  (theStack! fun = pivotValue >; filter! # 1 > ? quicksort!;)
}


'lib/iterate.bang' require! .times as times

'./mathlib' crequire! .random as random

def :testQuicksort numItems = { 
  random numItems times!
  quicksort!
  numItems 499 > ? save-stack! drop!
}

-- 

fun=
N testQuicksort!
;1 times!

-- with GC 1.2s
