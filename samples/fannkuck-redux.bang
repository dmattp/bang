-- The Computer Language Benchmarks Game
-- http://benchmarksgame.alioth.debian.org/
-- translated from Lua by Matt Placek
# 1 < ? 8; as N

'lib/iterate.bang' require! .range as range

# N "fannkuck start stack=%@ N=%@\n" print!

def :fannkuch n = {
--  # n "stack=%@ fannkuck n=%@\n" print!
  0 as maxflips
  0 as sum

   (fun=; 0 n range! stack-to-array!) as p
   (p.push! stack-to-array!) as q
   (p.push! stack-to-array!) as s

   def :iloopy j = { as i
      i j q.swap
      j i - 2 >
      ? i 1 + j 1 - iloopy!
   }

   fun i = i p! i q.set; as setqfromp

   fun j = { j 1 + p! j p.set } as setjfromplus1

   def :permute-loop i = {
       i s! as sx
       sx 1 = not!
       ? { sx 1 - i s.set true }
       : {
           i n < not!
           ? { -- 'got exit' print!
               sum maxflips false }
           : {
              i i s.set
              1 p! as t
              setjfromplus1 1 i range!
              t i 1 + p.set
              i 1 + permute-loop!
           }
       }
   }

   def :flipper-loop sign = {
      def :inner-flipper flips = { as q1
        q1 q! as qq
        qq 1 =
        ? { sum sign flips * + |> sum                   -- MUTATION
            flips maxflips > ? { flips |> maxflips }    -- MUTATION
        }
        : { q1 q1 q.set
            q1 4 < not!
            ? { 2 q1 1 - iloopy! }
            qq flips 1 + inner-flipper!
        } -- q1 1 = :
     }
     inner-flipper!
   } -- end, flipper-loop

   def :inner-mainloop sign = {
     1 p! as q1
     q1 1 = not! ? {
        setqfromp 2 n range!  -- MUTATION
        q1 1 sign flipper-loop!
     } -- end, q1 1 = not! ?
     sign 1 = ? {
          1 2 p.swap
          -1 inner-mainloop!
     } : {
          2 3 p.swap
          3 permute-loop! -- permute loop returns 'true' to continue or 'sum maxflips false' on finish
          ? 1 inner-mainloop!
     }
   } -- :inner-mainloop
   1 inner-mainloop!
--   'exited mainloop\n' print!
} -- end, :fannkuck

N fannkuch! as maxflips as sum
sum N maxflips "Sum = %@\nPfannkuchen(N = %@) maxflips = %@\n" print!

-- lua523r time for '9' on my box = 970ms ; sum=8629, maxflips=30